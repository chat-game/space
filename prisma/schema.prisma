generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Village {
  id                  String   @id
  createdAt           DateTime @default(now())
  updatedAt           DateTime @default(now())
  globalTarget        Int?
  globalTargetSuccess Int?
  wood                Int      @default(0)
  stone               Int      @default(0)
}

model Player {
  id                 String          @id
  createdAt          DateTime        @default(now())
  updatedAt          DateTime        @default(now())
  lastActionAt       DateTime        @default(now())
  twitchId           String
  userName           String
  x                  Int             @default(0)
  y                  Int             @default(0)
  targetX            Int?            @default(0)
  targetY            Int?            @default(0)
  targetId           String?
  isBusy             Boolean         @default(false)
  businessType       String?
  colorIndex         Int             @default(0)
  handsItemType      String?
  handsItemAmount    Int             @default(0)
  coins              Int             @default(0)
  reputation         Int             @default(0)
  skillWoodLvl       Int             @default(0)
  skillWoodNextLvl   Int             @default(20)
  skillWood          Int             @default(0)
  skillMiningLvl     Int             @default(0)
  skillMiningNextLvl Int             @default(20)
  skillMining        Int             @default(0)
  commands           Command[]
  items              InventoryItem[]
}

model InventoryItem {
  id         String   @id
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  playerId   String
  player     Player   @relation(fields: [playerId], references: [id])
  type       String
  amount     Int      @default(1)
  durability Int      @default(100)
}

model Command {
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  command   String
  target    String?
  playerId  String
  player    Player   @relation(fields: [playerId], references: [id])
}

model Tree {
  id               String   @id
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now())
  x                Int      @default(0)
  y                Int      @default(0)
  size             Int      @default(0)
  resource         Int
  isReserved       Boolean  @default(false)
  inProgress       Boolean  @default(false)
  progressFinishAt DateTime @default(now())
  type             String
}

model Stone {
  id               String   @id
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now())
  x                Int      @default(0)
  y                Int      @default(0)
  size             Int      @default(0)
  resource         Int
  isReserved       Boolean  @default(false)
  inProgress       Boolean  @default(false)
  progressFinishAt DateTime @default(now())
  type             String
}
